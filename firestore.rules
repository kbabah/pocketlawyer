rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    function isAuthenticated() {
      return request.auth != null;
    }
    
    function isOwner(userId) {
      return request.auth != null && request.auth.uid == userId;
    }
    
    function isAdmin() {
      return request.auth != null && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Default deny all
    match /{document=**} {
      allow read, write: if false;
    }

    // Allow users to manage their profiles and related data
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isOwner(userId);

      // Allow users to manage their own onboarding progress
      match /onboarding/{document=**} {
        allow read, write: if isOwner(userId);
      }

      // Allow users to manage their chats
      match /chats/{document=**} {
        allow read, write: if isAuthenticated() && isOwner(userId);
      }
      
      // Allow users to manage their documents
      match /documents/{document=**} {
        allow read, write: if isAuthenticated() && isOwner(userId);
      }

      // Allow users to manage their notifications
      match /notifications/{document=**} {
        allow read, write: if isOwner(userId);
      }
    }

    // Allow access to email tracking data
    match /emailTracking/{emailId} {
      allow read: if isAuthenticated() && (
        resource.data.recipient == request.auth.email ||
        isAdmin()
      );
      // Write access only through server
    }

    // Allow access to scheduled emails
    match /scheduledEmails/{emailId} {
      allow read: if isAuthenticated() && (
        resource.data.to[0] == request.auth.email ||
        isAdmin()
      );
      // Write access only through server
    }

    // Allow access to email campaigns
    match /emailCampaigns/{campaignId} {
      allow read: if isAdmin();
      // Write access only through server
    }

    // Allow access to email templates
    match /emailTemplates/{templateId} {
      allow read: if isAdmin();
      allow write: if isAdmin();
    }

    // Allow both authenticated and anonymous users to create feedback
    match /feedback/{feedbackId} {
      allow create: if 
        (isAuthenticated() && request.resource.data.userId == request.auth.uid) || 
        (!request.auth && request.resource.data.userId == 'anonymous');
      allow read, write, update, delete: if isOwner(resource.data.userId);
    }
    
    // Allow authenticated users to read and write their own documents
    match /documents/{documentId} {
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow read, write, update, delete: if isOwner(resource.data.userId);
    }

    // Allow authenticated users to read and write their own chats
    match /chats/{chatId} {
      allow create: if isAuthenticated() && request.resource.data.userId == request.auth.uid;
      allow read, write, update, delete: if isOwner(resource.data.userId);
    }

    // Allow access to blog posts
    match /blog-posts/{postId} {
      allow read: if 
        resource.data.published == true || 
        isAdmin();
      allow create, update, delete: if isAdmin();
    }

    // Allow read access to legal terms and privacy policy
    match /legal/{document=**} {
      allow read: if true;
      allow write: if isAdmin();
    }

    // Newsletter subscribers - server-side only
    match /newsletter-subscribers/{subscriberId} {
      allow read: if isAdmin();
      // Write access only through server API
    }
  }
}